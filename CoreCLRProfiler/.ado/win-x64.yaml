# https://aka.ms/yaml

name: "1.0.0.$(BuildID)"

trigger:
  - master
  - dev

pr:
  - master
  - dev

jobs:
  - job: windows_build_x64

    pool:
      name: Azure Pipelines
      vmImage: 'windows-latest'

    steps:

    - powershell: |
       $sourceDir = "$(Build.SourcesDirectory)".Replace("\", "\\")
       Set-Content -Path $(Build.SourcesDirectory)\sourcelink.json -Value "{ ""documents"": { ""$sourceDir\\*"": ""https://raw.githubusercontent.com/microsoft/BPerf/$(Build.SourceVersion)/*"" } }"
      displayName: 'PowerShell Script'

    - task: CMake@1
      displayName: CMake
      inputs:
        cmakeArgs: '-G "Visual Studio 16 2019" -A x64 $(Build.SourcesDirectory)/CoreCLRProfiler/native/CMakeLists.txt -DLINK_TYPE=Static -DSourceLinkJson=$(Build.SourcesDirectory)\sourcelink.json'

    - task: MSBuild@1
      displayName: 'Build solution CoreCLRProfiler\native\Microsoft.BPerf.CoreCLRProfiler.vcxproj'
      inputs:
        solution: 'CoreCLRProfiler\native\Microsoft.BPerf.CoreCLRProfiler.vcxproj'
        platform: x64
        configuration: RelWithDebInfo

    - publish: $(Build.SourcesDirectory)/CoreCLRProfiler/native/RelWithDebInfo
      artifact: WindowsArtifactsX64

  - job: windows_build_arm64

    pool:
      name: Azure Pipelines
      vmImage: 'windows-latest'

    steps:

    - powershell: |
       $sourceDir = "$(Build.SourcesDirectory)".Replace("\", "\\")
       Set-Content -Path $(Build.SourcesDirectory)\sourcelink.json -Value "{ ""documents"": { ""$sourceDir\\*"": ""https://raw.githubusercontent.com/microsoft/BPerf/$(Build.SourceVersion)/*"" } }"
      displayName: 'PowerShell Script'

    - task: CMake@1
      displayName: CMake
      inputs:
        cmakeArgs: '-G "Visual Studio 16 2019" -A arm64 $(Build.SourcesDirectory)/CoreCLRProfiler/native/CMakeLists.txt -DLINK_TYPE=Static -DSourceLinkJson=$(Build.SourcesDirectory)\sourcelink.json'

    - task: MSBuild@1
      displayName: 'Build solution CoreCLRProfiler\native\Microsoft.BPerf.CoreCLRProfiler.vcxproj'
      inputs:
        solution: 'CoreCLRProfiler\native\Microsoft.BPerf.CoreCLRProfiler.vcxproj'
        platform: arm64
        configuration: RelWithDebInfo

    - publish: $(Build.SourcesDirectory)/CoreCLRProfiler/native/RelWithDebInfo
      artifact: WindowsArtifactsARM64

  - job: linux_build_x64

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      imageName: 'bperflinux'
      imageTag: '$(build.buildId)'
      fullImageName: '$(imageName):$(imageTag)'

    steps:

    - task: CMake@1
      displayName: CMake
      inputs:
        cmakeArgs: '$(Build.SourcesDirectory)/CoreCLRProfiler/native/CMakeLists.txt'

    - script: |
        cd $(Build.SourcesDirectory)/CoreCLRProfiler/native
        make
      displayName: 'Build code'

    - publish: $(Build.SourcesDirectory)/CoreCLRProfiler/native
      artifact: LinuxArtifactsX64

  - job: nugetpacking
    dependsOn:
    - windows_build_x64
    - windows_build_arm64
    - linux_build_x64

    pool:
      vmImage: 'windows-latest'

    steps:

    - download: current
      artifact: LinuxArtifactsX64

    - download: current
      artifact: WindowsArtifactsX64

    - download: current
      artifact: WindowsArtifactsARM64

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Pipeline.Workspace)'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: CoreCLRProfiler/managed/Microsoft.BPerf.ProfilerInterop.nuspec
        TargetFolder: '$(Pipeline.Workspace)'
        flattenFolders: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: '$(Build.SourcesDirectory)/CoreCLRProfiler/managed/Microsoft.BPerf.ProfilerInteropGenerator.csproj'
        arguments: '-c Release'
        workingDirectory: CoreCLRProfiler/managed

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Pipeline.Workspace)'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/CoreCLRProfiler/managed/bin/Release/netcoreapp3.1'
        Contents: Microsoft.BPerf.ProfilerInterop.dll
        TargetFolder: '$(Pipeline.Workspace)'

    - task: NuGetCommand@2
      displayName: 'Pack Microsoft.BPerf.ProfilerInterop'
      inputs:
        command: pack
        packagesToPack: '$(Pipeline.Workspace)/Microsoft.BPerf.ProfilerInterop.nuspec'
        packDestination: '$(Build.ArtifactStagingDirectory)/NuGetStaging'
        versioningScheme: byBuildNumber

    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        publishVstsFeed: 'BPerf/BPerf'
        allowPackageConflicts: true